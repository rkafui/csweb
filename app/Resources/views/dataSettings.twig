<!DOCTYPE html>
<!-- saved from url=(0014)about:internet -->
<html lang="en">

    <head>

        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="description" content="">
        <meta name="author" content="">

        <link rel='icon' href={{asset('dist/img/favicon.ico')}} type='image/x-icon'/ >

        <title>CSWeb</title>

        <!-- Bootstrap Core CSS -->
        <link href={{asset('bower_components/bootstrap/dist/css/bootstrap.min.css')}} rel="stylesheet">

        <!-- MetisMenu CSS -->
        <link href={{asset('bower_components/metisMenu/dist/metisMenu.min.css')}} rel="stylesheet">

        <!-- DataTables CSS -->
        <link href={{asset('bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css')}} rel="stylesheet">

        <!-- Custom CSS -->
        <link href={{asset('dist/css/sb-admin-2.css')}} rel="stylesheet">

        <!-- Custom Fonts -->
        <link href={{asset('bower_components/font-awesome/css/font-awesome.min.css')}} rel="stylesheet" type="text/css">

        <!-- ALW - Custom CSS -->
        <link href={{asset('dist/css/cspro-styles.css')}} rel="stylesheet">

        <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
            <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
            <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
        <![endif]-->

    </head>

    <body>

        <div id="wrapper">
            <!-- Navigation -->
            <nav class="navbar navbar-default navbar-static-top navbar-cspro" role="navigation" style="margin-bottom: 0">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="{{ path('dashboard') }}">
                        <img alt="Brand" src={{asset('dist/img/logo.png')}}>
                    </a>
                    <p class="title-text-cspro">CSWeb</p>
                    <p class="version-text-cspro">{{ csproVersion }}</p>
                </div>
                <!-- /.navbar-header -->
                {% set userinfo = app.request.cookies.has('username') ? app.request.cookies.get('username')  : null %}
                {% set accessToken = app.request.cookies.has('access_token') ? app.request.cookies.get('access_token') : null %}
                <ul class="nav navbar-top-links navbar-right cspro">
                    <li class="nav-text-cspro nav-li-a-placeholder-cspro">
                        {{ userinfo }}
                    </li>
                    <li>
                        <a href="{{ path('logout') }}" class="nav-text-cspro"><i class="fa fa-sign-out fa-fw"></i> Logout</a>
                    </li>
                </ul>

                <div class="navbar-default sidebar" role="navigation">
                    <div class="sidebar-nav navbar-collapse">
                        <ul class="nav" id="side-menu">
                            {% if is_granted('ROLE_DATA_ALL') == true %}
                                <li>
                                    <a href="{{ path('dashboard') }}"><i class="fa fa-database fa-fw"></i> Data</a>
                                </li>
                            {% endif %}
                            {% if is_granted('ROLE_REPORTS_ALL') == true %}
                                <li>
                                    <a href="{{ path('sync-report') }}"><i class="fa fa-table fa-fw"></i> Sync Report<span
                                            class="fa arrow"></span></a>
                                </li>
                            {% endif %}
                            {% if is_granted('ROLE_APPS_ALL') == true %}
                                <li>
                                    <a href="{{ path('apps') }}"><i class="fa fa-desktop fa-fw"></i> Apps</a>
                                </li>
                            {% endif %}
                            {% if is_granted('ROLE_USERS_ALL') == true %}
                                <li>
                                    <a href="{{ path('users') }}"><i class="fa fa-users fa-fw"></i> Users</a>
                                </li>
                            {% endif %}
                            {% if is_granted('ROLE_ROLES_ALL') == true %}
                                <li>
                                    <a href="{{ path('roles') }}"><i class="fa fa-user fa-fw"></i> Roles</a>
                                </li>
                            {% endif %}
                            {% if is_granted('ROLE_SETTINGS_ALL') == true %}
                                <li>
                                    <a href="#"><i class="fa fa-cog fa-fw"></i> Settings<span
                                            class="fa arrow"></span></a>
                                    <ul class="nav nav-second-level">
                                        <li>
                                            <a href="{{ path('dataSettings') }}"><i class="fa fa-database fa-fw"></i> Data</a>
                                        </li>
                                    </ul>
                                </li> 
                            {% endif %}
                        </ul>
                    </div>
                    <!-- /.sidebar-collapse -->
                </div>
                <!-- /.navbar-static-side -->
            </nav>

            <!-- Modal Content -->
            <div id="add-config-modal" class="modal fade" role="dialog" aria-labelledby="add-config-modal-label">
                <div class="modal-dialog" >
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title" id="add-config-modal-label">Add Configuration</h4>
                        </div>
                        <!-- /.modal-header -->
                        <div class="modal-body">
                            <form class="form-horizontal" id="add-config-form" role="form">
                                <!-- form-group -->
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="config">Source Data</label>
                                    <div class="col-sm-8">
                                        <select class="form-control" id="config" name="configuration">
                                            {% for dataSetting in dataSettings %}
                                                {% if dataSetting.targetSchemaName == "" %}
                                                    <option value={{ dataSetting.id}}>{{ dataSetting.label}}</option>
                                                {% endif %}
                                            {% endfor %}
                                        </select>
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="target-db-name">Database name</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" name="targetSchemaName" id="target-db-name" placeholder="Database name different from source database"
                                               data-required-error="Target database name is required" required>
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>
                                <!-- form-group -->
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="host-name">Hostname</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" name="targetHostName" id="host-name" placeholder="Hostname of database server (e.g. localhost)."
                                               data-required-error="Host name is required" required>
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>
                                <!-- form-group -->
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="db-user-name">Database username</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" name="dbUserName" id="db-user-name" placeholder="Name of database user. Must already exist."
                                               data-required-error="user name is required" required>
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>

                                <!-- form-group -->
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="db-password">Database password</label>
                                    <div class="col-sm-8">
                                        <input type="password" class="form-control" name="dbPassword" id="db-password" placeholder="Database user password.">
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>

                                <!-- form-group -->
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-primary" id="add-button">Add</button>
                                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                </div>  
                                <!-- form-group -->
                            </form>
                            <!-- form-horizontal -->
                        </div>
                        <!-- /.modal-body -->
                    </div>
                </div>
                <!-- /.modal-dialog -->
            </div>

            <!-- Modal Content -->
            <div id="edit-config-modal" class="modal fade" role="dialog" aria-labelledby="edit-config-modal-label">
                <div class="modal-dialog" >
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title" id="edit-config-modal-label">Edit Configuration</h4>
                        </div>
                        <!-- /.modal-header -->
                        <div class="modal-body">
                            <form class="form-horizontal" id="edit-config-form" role="form">
                                <!-- form-group -->
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="config">Source Data</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" name="edit-source-data" id="edit-source-data" placeholder="sourceData" disabled>
                                        <input type="hidden" class="form-control" name="edit-configId" id="edit-configId" placeholder="sourceID" disabled>
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="target-db-name">Database name</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" name="edit-targetSchemaName" id="edit-target-db-name" placeholder="Database name different from source database"
                                               data-required-error="Target database name is required" required>
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>
                                <!-- form-group -->
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="host-name">Hostname</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" name="edit-targetHostName" id="edit-host-name" placeholder="Hostname of database server (e.g. localhost)."
                                               data-required-error="Host name is required" required>
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>
                                <!-- form-group -->
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="edit-db-user-name">Database username</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" name="edit-dbUserName" id="edit-db-user-name" placeholder="Name of database user. Must already exist."
                                               data-required-error="user name is required" required>
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>

                                <!-- form-group -->
                                <div class="form-group has-feedback">
                                    <label class="col-sm-4 control-label" for="db-password">Database password</label>
                                    <div class="col-sm-8">
                                        <input type="password" class="form-control" name="edit-dbPassword" id="edit-db-password" placeholder="Database user password.">
                                        <div class="help-block with-errors"></div>
                                    </div>
                                </div>

                                <!-- form-group -->
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-primary" id="update-button">Update</button>
                                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                </div>  
                                <!-- form-group -->
                            </form>
                            <!-- form-horizontal -->
                        </div>
                        <!-- /.modal-body -->
                    </div>
                </div>
                <!-- /.modal-dialog -->
            </div>


            <!-- Delete setting Modal Content -->
            <div id="delete-config-modal" class="modal fade" role="dialog" aria-labelledby="delete-config-modal-label">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title" id="delete-config-modal-label">Delete Configuration</h4>
                        </div>
                        <!-- /.modal-header -->
                        <div class="modal-body">
                            <p>Are you sure you want to delete the configuration and associated target data?</p>
                        </div>
                        <!-- /.modal-body -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" id="delete-button">Yes</button>
                            <button type="button" class="btn btn-primary" data-dismiss="modal">No</button>
                        </div>
                    </div>
                </div>
                <!-- /.modal-dialog -->
            </div>


            <!-- Page Content -->
            <div id="page-wrapper">
                <div class="row">
                    <div class="col-xs-12">
                        <div id="alert" class="alert-placeholder-cspro alert-margin-cspro">
                        </div>
                        <!-- /.alert -->
                    </div>
                    <!-- /.col-xs-12 -->
                </div>
                <!-- /.row -->
                <div class="row">
                    <div class="col-xs-12">
                        <div class="panel panel-default">
                            <!-- ALW - Create margin above panel heading -->
                            <div class="panel-heading">
                                <div class="btn-toolbar">
                                    <i class="fa fa-database fa-fw"></i> Data Configuration
                                    <button type="button" class="btn btn-primary btn-xs pull-right" id="configure-dictionary-button">Add Configuration</button>
                                </div>
                            </div>
                            <!-- /.panel-heading -->
                            <div class="table-responsive">
                                <table id="data-config-table"  class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th class="col-xs-2">Data</th>
                                            <th class="col-xs-2">Target Schema</th>
                                            <th class="col-xs-2">Total Cases</th>
                                            <th class="col-xs-2">Processed Cases</th>
                                            <th class="col-xs-2">Last Processed Time</th>
                                            <th class="col-xs-2">Edit</th>
                                            <th class="col-xs-2">Delete</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for dataSetting in dataSettings %}
                                            {%  if dataSetting.targetSchemaName != "" %}
                                                <tr data-id={{ dataSetting.id}} data-dictname={{ dataSetting.name}} data-dictlabel="{{ dataSetting.label}}">
                                                    <td>{{ dataSetting.label}}</td>
                                                    <td>{{ dataSetting.targetHostName}} | {{ dataSetting.targetSchemaName}}</td>
                                                    <td>{{ dataSetting.totalCases}}</td>
                                                    <td>{{ dataSetting.processedCases}}</td>
                                                    <td>{{ dataSetting.lastProcessedTime}}</td>
                                                    <td><a href="javascript:;" class="edit-button-class"><i class="fa fa-pencil fa-fw"></i></a></td>
                                                    <td><a href="javascript:;" class="delete-button-class"><i class="fa fa-trash-o fa-fw"></i></a></td>
                                                </tr>
                                            {% endif %}
                                        {% endfor %}

                                    </tbody>
                                </table>
                            </div>
                            <!-- /.table-responsive -->
                        </div>
                        <!-- /.panel -->
                    </div>
                    <!-- /.col-xs-12 -->
                </div>
                <!-- /.row -->
            </div>
            <!-- /#page-wrapper -->

        </div>
        <!-- /#wrapper -->

        <!-- jQuery -->
        <script src={{asset('bower_components/jquery/dist/jquery.min.js')}}></script>

        <!-- Bootstrap Core JavaScript -->
        <script src={{asset('bower_components/bootstrap/dist/js/bootstrap.min.js')}}></script>

        <!-- Metis Menu Plugin JavaScript -->
        <script src={{asset('bower_components/metisMenu/dist/metisMenu.min.js')}}></script>

        <!-- DataTables JavaScript -->
        <script src={{asset('bower_components/datatables/media/js/jquery.dataTables.min.js')}}></script>
        <script src={{asset('bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js')}}></script>

        <!-- Custom Theme JavaScript -->
        <script src={{asset('dist/js/sb-admin-2.js')}}></script>

        <!-- Bootstrap Validator -->
        <script src={{asset('bower_components/bootstrap-validator/dist/validator.min.js')}}></script>

        <!-- Page-Level Scripts -->
        <script>
            "use strict";
            // variables for importUsers
            function showAlert(message, alertStyle) {
                $("#alert").replaceWith("<div id='alert' class='" + alertStyle + " alert-margin-cspro'>" + message + "</div>");
                $("#alert").show();
            }
            $(document).ready(function () {

                // Spinner functionality
                var $body = $("body");
                $(document).ajaxStart(function (event, request, settings) {
                    $body.addClass("loading");
                });
                $(document).ajaxComplete(function (event, request, settings) {
                    $body.removeClass("loading");
                });
                if (sessionStorage.getItem("add-config-success")) {
                    showAlert(sessionStorage.getItem("add-config-success"), "alert alert-success");
                    sessionStorage.clear();
                } else if (sessionStorage.getItem("add-config-failure")) {
                    showAlert(sessionStorage.getItem("add-config-failure"), "alert alert-danger");
                    sessionStorage.clear();
                }
            });
            // Add configuration
            $("#configure-dictionary-button").click(function () {
                if ($('#config option').length == 0) {
                    showAlert("No more dictionaries available to configure.", "alert alert-danger");
                } else {
                    $("#add-config-modal").modal("show");
                }
            });
            //set focus to the first field on the form
            $("#add-config-modal").on("shown.bs.modal", function () {
                addConfig.initBootstrapValidator();
                $("#target-db-name").focus();
            });
            $("#add-config-modal").on("hidden.bs.modal", function () {
                $("#add-config-form").unbind("submit");
                $(this).find('form')[0].reset();
            });
            var addConfig = (function () {
                // Private
                var submit = function (event) {
                    event.preventDefault();
                    //TODO: check if the source database is same as target DB and display alert
                    //any tables in the target will be deleted do you want to continue alert?
                    var $modal = $("#add-config-modal");
                    var dataSetting = {};
                    // get the data from your modal
                    $modal.find("input").each(function () {
                        if ($(this).attr("name"))
                            dataSetting[$(this).attr("name")] = $(this).val();
                    });
                    dataSetting['id'] = $('#config').val();
                    dataSetting['label'] = $("#config option:selected").text();
                    $modal.modal("hide");
                    $.ajax({
                        type: "POST",
                        url: "{{ path('addSetting') }}",
                        data: JSON.stringify(dataSetting),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.code === 200) {
                                var alertMsg = "The configuration for " + dataSetting['label'] + " was successfully added.";
                                sessionStorage.setItem("add-config-success", alertMsg);
                                location.reload();
                                //showAlert("The configuration " + dataSetting['label'] + " was successfully added.", "alert alert-success");
                            } else {
                                var alertMsg = "Failed adding the configuration for " + dataSetting['label'] + "<br>" +
                                        response.description + "</br>";
                                sessionStorage.setItem("add-config-failure", alertMsg);
                                showAlert(sessionStorage.getItem("add-config-failure"), "alert alert-danger");
                            }
                        },
                        error: function (response) {
                            //in case of  timeout  the redirect response comes with html content and status code as 200
                            //this causes an error as the response text is not json but datatype in ajax is set to json
                            //in this case redirect to logout
                            if (response.status === 200 || response.status === 401 || response.status === 405) {
                                window.location.href = "{{ path('logout') }}";
                            } else {
                                var errResponse = JSON.parse(response.responseText);
                                var message = errResponse.description != null ? errResponse.description : response.responseText;
                                showAlert(message, "alert alert-danger");
                            }
                        },
                        failure: function (errMsg) {
                            alert("error!");
                        }
                    });
                }

                // Public
                var initBootstrapValidator = function () {
                    $("#add-config-form").validator().on("submit", function (event) {
                        // If the form is invalidated by Bootstrap Validator then the submit event calls
                        // preventDefault(). Use isDefaultPrevented() to detect whether form is valid.
                        if (!event.isDefaultPrevented()) {
                            submit(event);
                        }
                    });
                };
                return {
                    initBootstrapValidator: initBootstrapValidator
                };
            })();
            //Edit config functionality 
            $('#data-config-table tbody').on('click', '.edit-button-class', function (event) {
                var tr = $(event.target).closest("tr");
                var dataSettings
                = {{ dataSettings|  json_encode |  raw  }};
                        var dictionaryId = $(tr).data("id");
                for (var i = 0; i < dataSettings.length; i++) {
                    if (dataSettings[i].id == dictionaryId) {
                        $("#edit-host-name").val(dataSettings[i].targetHostName);
                        $("#edit-target-db-name").val(dataSettings[i].targetSchemaName);
                        $("#edit-source-data").val(dataSettings[i].label);
                        $("#edit-configId").val(dictionaryId);
                        $("#edit-db-password").val(dataSettings[i].dbPassword);
                        $("#edit-db-user-name").val(dataSettings[i].dbUserName);
                    }
                }

                $("#edit-config-modal").modal("show");
            }
            );
            $("#edit-config-modal").on("shown.bs.modal", function () {
                editConfig.initBootstrapValidator();
                $("#edit-target-db-name").focus();
            });
            $("#edit-config-modal").on("hidden.bs.modal", function () {
                $("#edit-config-form").unbind("submit");
                $(this).find('form')[0].reset();
            });
            var editConfig = (function () {
                // Private
                var submit = function (event) {
                    event.preventDefault();
                    //TODO: check if the source database is same as target DB and display alert
                    //any tables in the target will be deleted do you want to continue alert?
                    var $modal = $("#edit-config-modal");
                    var dataSetting = {};
                    // get the data from your modal
                    $modal.find('input').each(function () {
                        if ($(this).attr("name")) {
                            var attribName = $(this).attr("name");
                            attribName = attribName.substr(attribName.indexOf('-') + 1);
                            dataSetting[attribName] = $(this).val();
                        }
                    });
                    dataSetting['id'] = dataSetting['configId'];
                    dataSetting['label'] = dataSetting['source-data'];
                    $modal.modal("hide");
                    $.ajax({
                        type: "PUT",
                        url: "{{ path('updateSetting') }}",
                        data: JSON.stringify(dataSetting),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.code === 200) {
                                var alertMsg = "The configuration for " + dataSetting['label'] + " was successfully updated.";
                                sessionStorage.setItem("add-config-success", alertMsg);
                                location.reload();
                            } else {
                                var alertMsg = "Failed updating the configuration for " + dataSetting['label'] + "<br>" +
                                        response.description + "</br>";
                                sessionStorage.setItem("add-config-failure", alertMsg);
                                showAlert(sessionStorage.getItem("add-config-failure"), "alert alert-danger");
                            }
                        },
                        error: function (response) {
                            //in case of  timeout  the redirect response comes with html content and status code as 200
                            //this causes an error as the response text is not json but datatype in ajax is set to json
                            //in this case redirect to logout
                            if (response.status === 200 || response.status === 401 || response.status === 405) {
                                window.location.href = "{{ path('logout') }}";
                            } else {
                                var errResponse = JSON.parse(response.responseText);
                                var message = errResponse.description != null ? errResponse.description : response.responseText;
                                showAlert(message, "alert alert-danger");
                            }
                        },
                        failure: function (errMsg) {
                            alert("error!");
                        }
                    });
                }

                // Public
                var initBootstrapValidator = function () {
                    $("#edit-config-form").validator().on("submit", function (event) {
                        // If the form is invalidated by Bootstrap Validator then the submit event calls
                        // preventDefault(). Use isDefaultPrevented() to detect whether form is valid.
                        if (!event.isDefaultPrevented()) {
                            submit(event);
                        }
                    });
                };
                return {
                    initBootstrapValidator: initBootstrapValidator
                };
            })();
            // Delete config functionality
            (function () {
                var tr;
                $('#data-config-table tbody').on('click', '.delete-button-class', function (event) {
                    tr = $(event.target).closest("tr");
                    var dictionaryLabel = $(tr).data("dictlabel");
                    var modalText = ' Are you sure you want to delete the configuration  for \"' + dictionaryLabel + '\"? ';
                    $("#delete-config-modal").find('.modal-body').text(modalText);
                    $("#delete-config-modal").modal("show");
                });
                $("#delete-button").on("click", function (event) {
                    event.preventDefault();
                    $("#delete-config-modal").modal("hide");
                    // get the dictionary id  of the row
                    var dictionaryId = $(tr).data("id");
                    $.ajax({
                        type: "DELETE",
                        url: "{{ path('dataSettings') }}/" + dictionaryId,
                        dataType: "json",
                        success: function (response) {
                            if (response.code === 200) {
                                var alertMsg = "Configuration " + $(tr).data("dictlabel") + " deleted.";
                                sessionStorage.setItem("add-config-success", alertMsg);
                                location.reload();
                            } else {
                                showAlert(response.description, "alert alert-danger");
                            }
                        },
                        error: function (response) {
                            if (response.status === 401 || response.status === 405) {
                                window.location.href = "{{ path('logout') }}";
                            }
                        },
                        failure: function (errMsg) {
                            alert("error!");
                        }
                    });
                });
            })();



        </script>

        <div id="mainSpinner" class="spinner"><!-- Place at bottom of page --></div>

    </body>

</html>
